library(swirl)
swirl()
library(swirl)
swirl()
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char , "Pratik Gujral")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
InF - Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[30000]
x[3000]
x[c(-2,-10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c('Bill', 'Gina', 'Kelly', 'Sean')
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
my_data <- colnames(cnames)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<-10
10<=10
5 != 7
! (5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE,
| FALSE)
TRUE && c(TRUE, FALSE,FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints)
any(ints<0)
all(ints>0)
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
boring_function <- function(x) {
x
}
submit()
boring_function("My first function!")
boring_function()
boring_function
submit()
my_mean
my_mean(c(4, 5, 10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8, 4, 0))
evaluate(function(x){x[length(x)]},c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram()
submit()
mad_libs("Pratik", "Place1", "Good")
submit()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2<- as.Date(1970-01-01)
d2<- as.Date("1970-01-01")
d2<- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units= 'days')
update.packages()
setwd("D:\\R\\R")
setwd("D:\\R\\R\\ProgrammingAssignments")
list.files()
list.files(recursive = TRUE)
?corr
?cor
View(my_vector)
rm(list=ls())
data1 <- read.csv("specdata\\001.csv")
View(data1)
for(i in list.files("specdata")){i}
for(i in list.files("specdata")){i}
list.files("specdata")
for(i in list.files("specdata")){print(i)}
for(i in list.files("specdata")){i}
for(i in list.files("specdata")){
file<-i
file
}
rm(c(file, i))
rm(file, i)
corr <- function(directory, threshold = 0){
for(i in list.files(directory)){
fileName <- paste(formatC(i, width=3, flag="0"), "csv", sep = ".")
filePath <- paste(directory, fileName, sep="\\")
print(filePath)
}
}
corr("specdata")
complete.cases(data1)
data1[complete.cases(data1)]
data1[complete.cases(data1$sulfur)]
data1[complete.cases(data1$sulfate)]
data1$sulfate[complete.cases(data1)]
cor(data1$sulfate, data1$nitrate)
cor(data1$sulfate, data1$nitrate, rm.na = TRUE)
cor(data1$sulfate[complete.cases(data)], data1$nitrate[complete.cases(data)])
data1$sulfate[complete.cases(data1)]
data1$nitrate[complete.cases(data1)]
str(var)
?var
data1[complete.cases(data1)]
subset(data1, subset = complete.cases(data1))
corr <- function(directory, threshold = 0){
corrResult <- numeric(length(list.files((directory))))
j <- 1
# Compute complete-cases
for(i in list.files(directory)){
fileName <- paste(formatC(i, width=3, flag="0"), "csv", sep = ".")
filePath <- paste(directory, fileName, sep="\\")
# Read the data from file
data <- read.csv(filePath)
#obs.result <- length(data$sulfate[complete.cases(data)])
#nobs[j] <- obs.result
#j <- j + 1
dataSansNA <- subset(data, subset = complete.cases(data))
nCompleteCases <- length(dataSansNA)
if(nCompleteCases > threshold)
corrResult[j] <- cor(nCompleteCases$sulfate, nCompleteCases$nitrate)
j <- j + 1
}
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0){
corrResult <- numeric(length(list.files((directory))))
j <- 1
# Compute complete-cases
for(i in list.files(directory)){
#fileName <- paste(formatC(i, width=3, flag="0"), "csv", sep = ".")
filePath <- paste(directory, i, sep="\\")
# Read the data from file
data <- read.csv(filePath)
#obs.result <- length(data$sulfate[complete.cases(data)])
#nobs[j] <- obs.result
#j <- j + 1
dataSansNA <- subset(data, subset = complete.cases(data))
nCompleteCases <- length(dataSansNA)
if(nCompleteCases > threshold)
corrResult[j] <- cor(nCompleteCases$sulfate, nCompleteCases$nitrate)
j <- j + 1
}
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0){
corrResult <- numeric(length(list.files((directory))))
j <- 1
# Compute complete-cases
for(i in list.files(directory)){
#fileName <- paste(formatC(i, width=3, flag="0"), "csv", sep = ".")
filePath <- paste(directory, i, sep="\\")
# Read the data from file
data <- read.csv(filePath)
#obs.result <- length(data$sulfate[complete.cases(data)])
#nobs[j] <- obs.result
#j <- j + 1
dataSansNA <- subset(data, subset = complete.cases(data))
nCompleteCases <- length(dataSansNA)
if(nCompleteCases > threshold)
corrResult[j] <- cor(nCompleteCases$sulfate, nCompleteCases$nitrate)
j <- j + 1
}
}
cr <- corr("specdata", 150)
debugSource('D:/R/R/ProgrammingAssignments/Assignment1.R')
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0){
corrResult <- numeric(length(list.files((directory))))
j <- 1
# Compute complete-cases
for(i in list.files(directory)){
#fileName <- paste(formatC(i, width=3, flag="0"), "csv", sep = ".")
filePath <- paste(directory, i, sep="\\")
# Read the data from file
data <- read.csv(filePath)
#obs.result <- length(data$sulfate[complete.cases(data)])
#nobs[j] <- obs.result
#j <- j + 1
dataSansNA <- subset(data, subset = complete.cases(data))
nCompleteCases <- nrow(dataSansNA)
if(nCompleteCases > threshold)
corrResult[j] <- cor(nCompleteCases$sulfate, nCompleteCases$nitrate)
j <- j + 1
}
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0){
corrResult <- numeric(length(list.files((directory))))
j <- 1
# Compute complete-cases
for(i in list.files(directory)){
#fileName <- paste(formatC(i, width=3, flag="0"), "csv", sep = ".")
filePath <- paste(directory, i, sep="\\")
# Read the data from file
data <- read.csv(filePath)
#obs.result <- length(data$sulfate[complete.cases(data)])
#nobs[j] <- obs.result
#j <- j + 1
dataSansNA <- subset(data, subset = complete.cases(data))
nCompleteCases <- nrow(dataSansNA)
if(nCompleteCases > threshold)
corrResult[j] <- cor(dataSansNA$sulfate, dataSansNA$nitrate)
j <- j + 1
}
}
cr <- corr("specdata", 150)
debugSource('D:/R/R/ProgrammingAssignments/Assignment1.R')
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0){
corrResult <- numeric(length(list.files((directory))))
j <- 1
# Compute complete-cases
for(i in list.files(directory)){
#fileName <- paste(formatC(i, width=3, flag="0"), "csv", sep = ".")
filePath <- paste(directory, i, sep="\\")
# Read the data from file
data <- read.csv(filePath)
#obs.result <- length(data$sulfate[complete.cases(data)])
#nobs[j] <- obs.result
#j <- j + 1
dataSansNA <- subset(data, subset = complete.cases(data))
nCompleteCases <- nrow(dataSansNA)
if(nCompleteCases > threshold){
corrResult[j] <- cor(dataSansNA$sulfate, dataSansNA$nitrate)
}
j <- j + 1
}
corrResult
}
debugSource('D:/R/R/ProgrammingAssignments/Assignment1.R')
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0){
corrResult <- numeric(length(list.files((directory))))
j <- 1
# Compute complete-cases
for(i in list.files(directory)){
#fileName <- paste(formatC(i, width=3, flag="0"), "csv", sep = ".")
filePath <- paste(directory, i, sep="\\")
# Read the data from file
data <- read.csv(filePath)
#obs.result <- length(data$sulfate[complete.cases(data)])
#nobs[j] <- obs.result
#j <- j + 1
dataSansNA <- subset(data, subset = complete.cases(data))
nCompleteCases <- nrow(dataSansNA)
if(nCompleteCases > threshold){
corrResult[j] <- cor(dataSansNA$sulfate, dataSansNA$nitrate)
}
j <- j + 1
}
corrResult
}
cr <- corr("specdata", 150)
head(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
View(cc)
cc$nobs
cc <- complete("specdata", 54)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
corr <- function(directory, threshold = 0){
corrResult <- numeric(length(list.files((directory))))
j <- 1
# Compute complete-cases
for(i in list.files(directory)){
#fileName <- paste(formatC(i, width=3, flag="0"), "csv", sep = ".")
filePath <- paste(directory, i, sep="\\")
# Read the data from file
data <- read.csv(filePath)
#obs.result <- length(data$sulfate[complete.cases(data)])
#nobs[j] <- obs.result
#j <- j + 1
dataSansNA <- subset(data, subset = complete.cases(data))
nCompleteCases <- nrow(dataSansNA)
if(nCompleteCases > threshold){
corrResult[j] <- cor(dataSansNA$sulfate, dataSansNA$nitrate)
}
j <- j + 1
}
corrResult
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0){
corrResult <- numeric(length(list.files((directory))))
j <- 1
# Compute complete-cases
for(i in list.files(directory)){
#fileName <- paste(formatC(i, width=3, flag="0"), "csv", sep = ".")
filePath <- paste(directory, i, sep="\\")
# Read the data from file
data <- read.csv(filePath)
#obs.result <- length(data$sulfate[complete.cases(data)])
#nobs[j] <- obs.result
#j <- j + 1
dataSansNA <- subset(data, subset = complete.cases(data))
nCompleteCases <- nrow(dataSansNA)
if(nCompleteCases > threshold){
corrResult[j] <- cor(dataSansNA$sulfate, dataSansNA$nitrate)
}
j <- j + 1
}
corrResult
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0){
corrResult <- numeric(length(list.files((directory))))
j <- 1
# Compute complete-cases
for(i in list.files(directory)){
#fileName <- paste(formatC(i, width=3, flag="0"), "csv", sep = ".")
filePath <- paste(directory, i, sep="\\")
# Read the data from file
data <- read.csv(filePath)
#obs.result <- length(data$sulfate[complete.cases(data)])
#nobs[j] <- obs.result
#j <- j + 1
dataSansNA <- subset(data, subset = complete.cases(data))
nCompleteCases <- nrow(dataSansNA)
if(nCompleteCases > threshold){
corrResult[j] <- cor(dataSansNA$sulfate, dataSansNA$nitrate)
j <- j + 1
}
}
corrResult
}
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
corr <- function(directory, threshold = 0){
corrResult <- numeric(length(list.files((directory))))
j <- 1
# Compute complete-cases
for(i in list.files(directory)){
#fileName <- paste(formatC(i, width=3, flag="0"), "csv", sep = ".")
filePath <- paste(directory, i, sep="\\")
# Read the data from file
data <- read.csv(filePath)
#obs.result <- length(data$sulfate[complete.cases(data)])
#nobs[j] <- obs.result
#j <- j + 1
dataSansNA <- subset(data, subset = complete.cases(data))
nCompleteCases <- nrow(dataSansNA)
if(nCompleteCases > threshold){
corrResult[j] <- cor(dataSansNA$sulfate, dataSansNA$nitrate)
j <- j + 1
}
}
for(i in corrResult){
if(i !=0 ){
corrResult
}
}
0
}
cr <- corr("specdata", 150)
head(cr)
